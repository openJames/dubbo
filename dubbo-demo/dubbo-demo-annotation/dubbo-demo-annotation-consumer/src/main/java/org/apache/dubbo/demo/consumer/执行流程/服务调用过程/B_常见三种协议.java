package org.apache.dubbo.demo.consumer.执行流程.服务调用过程;

/**
 * desc:
 *

 常见的三种协议形式

 应用层一般有三种类型的协议形式，分别是：
 固定长度形式、
 特殊字符隔断形式、
 header+body 形式

 固定长度形式：指的是协议的长度是固定的，比如100个字节为一个协议单元，那么读取100个字节之后就开始解析。
 优点就是效率较高，无脑读一定长度就解析。
 缺点就是死板，每次长度只能固定，不能超过限制的长度，并且短了还得填充，在 RPC 场景中不太合适，谁晓得参数啥的要多长，定长了浪费，定短了不够。

 特殊字符隔断形式：其实就是定义一个特殊结束符，根据特殊的结束符来判断一个协议单元的结束，比如用换行符等等。
 这个协议的优点是长度自由，反正根据特殊字符来截断，
 缺点就是需要一直读，直到读到一个完整的协议单元之后才能开始解析，然后假如传输的数据里面混入了这个特殊字符就出错了。

 header+body 形式：也就是头部是固定长度的，然后头部里面会填写 body 的长度，
 body 是不固定长度的，这样伸缩性就比较好了，可以先解析头部，然后根据头部得到 body 的 len 然后解析 body

 dubbo 协议就是属于 header+body 形式，而且也有特殊的字符 0xdabb ，这是用来解决 TCP 网络粘包问题的


 *
 * @author James
 * @since 2021-03-29 15:06
 */
public class B_常见三种协议 {
}
